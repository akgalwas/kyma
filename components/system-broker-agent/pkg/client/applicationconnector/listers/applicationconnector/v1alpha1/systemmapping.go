// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/kyma-project/kyma/components/system-broker-agent/pkg/apis/applicationconnector/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// SystemMappingLister helps list SystemMappings.
type SystemMappingLister interface {
	// List lists all SystemMappings in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.SystemMapping, err error)
	// SystemMappings returns an object that can list and get SystemMappings.
	SystemMappings(namespace string) SystemMappingNamespaceLister
	SystemMappingListerExpansion
}

// systemMappingLister implements the SystemMappingLister interface.
type systemMappingLister struct {
	indexer cache.Indexer
}

// NewSystemMappingLister returns a new SystemMappingLister.
func NewSystemMappingLister(indexer cache.Indexer) SystemMappingLister {
	return &systemMappingLister{indexer: indexer}
}

// List lists all SystemMappings in the indexer.
func (s *systemMappingLister) List(selector labels.Selector) (ret []*v1alpha1.SystemMapping, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.SystemMapping))
	})
	return ret, err
}

// SystemMappings returns an object that can list and get SystemMappings.
func (s *systemMappingLister) SystemMappings(namespace string) SystemMappingNamespaceLister {
	return systemMappingNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// SystemMappingNamespaceLister helps list and get SystemMappings.
type SystemMappingNamespaceLister interface {
	// List lists all SystemMappings in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.SystemMapping, err error)
	// Get retrieves the SystemMapping from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.SystemMapping, error)
	SystemMappingNamespaceListerExpansion
}

// systemMappingNamespaceLister implements the SystemMappingNamespaceLister
// interface.
type systemMappingNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all SystemMappings in the indexer for a given namespace.
func (s systemMappingNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.SystemMapping, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.SystemMapping))
	})
	return ret, err
}

// Get retrieves the SystemMapping from the indexer for a given namespace and name.
func (s systemMappingNamespaceLister) Get(name string) (*v1alpha1.SystemMapping, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("systemmapping"), name)
	}
	return obj.(*v1alpha1.SystemMapping), nil
}
