// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import apperrors "github.com/kyma-project/kyma/components/application-registry/internal/apperrors"
import docstopic "github.com/kyma-project/kyma/components/application-registry/internal/metadata/specification/docstopic"
import mock "github.com/stretchr/testify/mock"

// Repository is an autogenerated mock type for the Repository type
type Repository struct {
	mock.Mock
}

// Create provides a mock function with given fields: documentationTopic
func (_m *Repository) Create(documentationTopic docstopic.Entry) apperrors.AppError {
	ret := _m.Called(documentationTopic)

	var r0 apperrors.AppError
	if rf, ok := ret.Get(0).(func(docstopic.Entry) apperrors.AppError); ok {
		r0 = rf(documentationTopic)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(apperrors.AppError)
		}
	}

	return r0
}

// Delete provides a mock function with given fields: id
func (_m *Repository) Delete(id string) apperrors.AppError {
	ret := _m.Called(id)

	var r0 apperrors.AppError
	if rf, ok := ret.Get(0).(func(string) apperrors.AppError); ok {
		r0 = rf(id)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(apperrors.AppError)
		}
	}

	return r0
}

// Get provides a mock function with given fields: id
func (_m *Repository) Get(id string) (docstopic.Entry, apperrors.AppError) {
	ret := _m.Called(id)

	var r0 docstopic.Entry
	if rf, ok := ret.Get(0).(func(string) docstopic.Entry); ok {
		r0 = rf(id)
	} else {
		r0 = ret.Get(0).(docstopic.Entry)
	}

	var r1 apperrors.AppError
	if rf, ok := ret.Get(1).(func(string) apperrors.AppError); ok {
		r1 = rf(id)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(apperrors.AppError)
		}
	}

	return r0, r1
}

// Update provides a mock function with given fields: documentationTopic
func (_m *Repository) Update(documentationTopic docstopic.Entry) apperrors.AppError {
	ret := _m.Called(documentationTopic)

	var r0 apperrors.AppError
	if rf, ok := ret.Get(0).(func(docstopic.Entry) apperrors.AppError); ok {
		r0 = rf(documentationTopic)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(apperrors.AppError)
		}
	}

	return r0
}
